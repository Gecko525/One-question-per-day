/**  
* 声明变量
* 1.变量提升（顶级作用域）
* 2.初始化即分配内存（赋默认值或undefined）
* 3.赋值（继续赋值） 
**/

//函数级作用域
var a = 1;//访问时a已经变量提升且初始化分配内存 所以不会报错会打印undefined


//块级作用域
//let 和 const 都有变量提升； let还没有初始化内存，所以报错（暂时性死区）；const没有赋值（继续赋值），只有变量提升和初始化，所以声明时要赋值且不能改变；

//let
console.log(b) //报错 let没有初始化分配内存
let b; 
console.log(b) //undefined 执行到语句才初始化赋默认值
b = 2;
console.log(b) //2 赋值

//const
const c;//报错 const只有声明和初始化，没有赋值（再次赋值）； 
console.log(d) //报错 const没有初始化分配内存
const d = 3;



//总结：
/* 
    let/const也存在变量声明提升，只是没有初始化分配内存。
    一个变量有三个操作，声明(提到作用域顶部)，初始化(赋默认值)，赋值(继续赋值)。
    var 是一开始变量声明提升，然后初始化成undefined，代码执行到那行的时候赋值。
    let 是一开始变量声明提升，然后没有初始化分配内存，代码执行到那行初始化，之后对变量继续操作是赋值。因为没有初始化分配内存，所以会报错，这是暂时性死区。
    const 是只有声明和初始化，没有赋值操作，所以不可变。
 */